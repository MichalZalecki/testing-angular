// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  describe('myApp', function() {
    beforeEach(module('myApp'));
    return describe('myApp.myAppCtrl', function() {
      var filltext, myAppCtrl, scope;
      myAppCtrl = filltext = scope = null;
      beforeEach(inject(function($controller, $rootScope, _filltext_, $q) {
        var failHTTPPrimiseMock;
        scope = $rootScope.$new();
        filltext = _filltext_;
        failHTTPPrimiseMock = function() {
          var promise;
          promise = $q.reject();
          promise.success = promise.error = function(fn) {
            fn([]);
            return promise;
          };
          return promise;
        };
        spyOn(filltext, 'getRecords').and.callFake(failHTTPPrimiseMock);
        spyOn(filltext, 'getRecordsBackUp').and.callFake(failHTTPPrimiseMock);
        myAppCtrl = $controller('myApp.myAppCtrl', {
          $scope: scope,
          filltext: filltext
        });
        return scope.$digest();
      }));
      it('should have scope.people array', function() {
        return expect(scope.people).toEqual(jasmine.any(Array));
      });
      it('should have scope.notify function', function() {
        return expect(scope.notify).toEqual(jasmine.any(Function));
      });
      it('should have called filltext.getRecords with 20', function() {
        return expect(filltext.getRecords).toHaveBeenCalledWith(20);
      });
      return it('should have called filltext.getRecordsBackUp on fail', function() {
        return expect(filltext.getRecordsBackUp).toHaveBeenCalled();
      });
    });
  });

}).call(this);
